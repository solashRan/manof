#!/usr/bin/env python

import os
import sys
import argparse


def run(command):
    return os.system('/bin/bash -c "{0}"'.format(command))


def register_arguments():
    parser = argparse.ArgumentParser()

    parser.add_argument('-o', '--offline-install-path', help='The dir path to install pip packages from.')

    return parser.parse_args()


def main():
    args = register_arguments()
    if args.offline_install_path is None:
        local_pip_packages = ''
    else:
        local_pip_packages = '--no-index --find-links=file:{}'.format(
            args.offline_install_path)

    # create venv, activate it and install requirements to it
    # (from a local dir if it exists)
    # "python -m pip install" instead of "pip install" handles a pip
    # issue where it fails in a long-named dir
    retval = run('virtualenv venv && source venv/bin/activate && '
                 'python -m pip install {0} -r requirements.txt'.format(
                    local_pip_packages))

    if retval != 0:
        sys.exit(retval)

    # symlink to run
    ln_cmd = 'ln -sF {0}/run /usr/local/bin/manof'.format(os.getcwd())

    # first try without sudo, then with
    retval = run(ln_cmd)

    if retval != 0:
        retval = run('sudo {0}'.format(ln_cmd))

    if not retval:
        print 'Installation complete. Enjoy your manof!'

    sys.exit(retval)


if __name__ == '__main__':
    main()
